openapi: 3.0.3
info:
  title: Event Scheduler API
  description: API for scheduling events in the system.
  version: 1.0.0
  contact:
    name: Kaustubh Maloo
servers:
  - url: http://localhost:8080/v1
    description: Local server

paths:
  /users:
    get:
      summary: List all users
      description: Retrieve a list of all users ordered by creation date.
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      description: Add a new user to the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 50
                  example: John Doe
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      summary: Get a user by ID
      description: Retrieve a user by their unique ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: User found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found.

  /events:
    post:
      summary: Create a new event
      operationId: CreateEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventRequest'
      responses:
        '201':
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEventResponse'
  /events/{event_id}:
    get:
      summary: Get an event by ID
      operationId: GetEventByID
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found
        '500':
          description: Internal server error
    put:
      summary: Update an event's name, description and duration
      operationId: UpdateEvent
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEventResponse'
      responses:
        '204':
          description: Event updated successfully
        '404':
          description: Event not found
        '500':
          description: Internal server error
    delete:
      summary: Delete an event
      operationId: DeleteEvent
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '204':
          description: Event deleted successfully
        '404':
          description: Event not found
        '500':
          description: Internal server error
  /events/list:
    get:
      summary: List all events
      operationId: ListEvents
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
  /events/organizer/{organizer_id}:
    get:
      summary: List events by organizer
      operationId: ListEventsByOrganizer
      parameters:
        - name: organizer_id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: List of events organized by the given organizer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'

  /time-slots/user/{user_id}:
    get:
      summary: Get time slots by user
      operationId: GetTimeSlotsByUser
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of user time slots
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeSlotUserResponse'
  /time-slots/user:
    post:
      summary: Create time slots for a user
      operationId: CreateTimeSlotUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeSlotUserRequest'
      responses:
        '201':
          description: User time slot created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeSlotUserResponse'
    put:
      summary: Update a user time slot
      operationId: UpdateTimeSlotUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSlotsUser'
      responses:
        '204':
          description: User time slot updated successfully
        '404':
          description: User time slot not found.
    delete:
      summary: Delete a user time slot
      operationId: DeleteTimeSlotUser
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '204':
          description: User time slot deleted successfully
        '400':
          description: Invalid input
        '404':
          description: User time slot not found

  /time-slots/event/{event_id}:
    get:
      summary: Get time slots by event
      operationId: GetTimeSlotsByEvent
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: List of event time slots
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeSlotsEventResponse'
  /time-slots/event:
    put:
      summary: Update an event time slot
      operationId: UpdateTimeSlotEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeSlotsEventRequest'
      responses:
        '204':
          description: Event time slot updated successfully
    delete:
      summary: Delete an event time slot
      operationId: DeleteTimeSlotEvent
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            description: Unique identifier for the time slot
        - name: event_id
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            description: Unique identifier for the event
      responses:
        '204':
          description: Event time slot deleted successfully
        '400':
          description: Invalid input provided
        '404':
          description: Event time slot not found
        '500':
          description: Internal server error

  /matching-slots/event/{event_id}:
    get:
      summary: Get matching time slots for event
      operationId: GetMatchingTimeSlotsForEvent
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: List of matching time slots for event
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    event_id:
                      type: integer
                    start_time:
                      type: string
                      format: date-time
                    end_time:
                      type: string
                      format: date-time

components:
  schemas:
    User:
      type: object
      required:
        - name
        - created_at
        - user_id
      properties:
        user_id:
          type: integer
          minimum: 1
          example: 1
        name:
          type: string
          minLength: 1
          maxLength: 50
          example: John Doe
        created_at:
          type: string
          format: date-time
          example: 2023-12-31T12:34:56Z

    Event:
      type: array
      items:
        type: object
        properties:
          event_id:
            type: integer
            minimum: 1
            example: 1
          organizer_id:
            type: integer
            minimum: 1
            example: 1
          event_name:
            type: string
            minLength: 1
            maxLength: 50
            example: My Event
          event_description:
            type: string
            example: This is an sample event
          duration:
            type: integer
            minimum: 1
            example: 1
          start_time:
            type: array
            items:
              type: string
              format: date-time
              example: 2023-12-31T12:34:56Z
          end_time:
            type: array
            items:
              type: string
              format: date-time
              example: 2023-12-31T13:34:56Z
          created_at:
            type: string
            format: date-time
            example: 2023-12-31T12:34:56Z
          updated_at:
            type: string
            format: date-time
            example: 2023-12-31T12:34:56Z

    CreateEventRequest:
      type: object
      required:
        - organizer_id
        - event_name
        - event_description
        - duration
        - start_time
        - end_time
      properties:
        organizer_id:
          type: integer
          minimum: 1
          example: 1
        event_name:
          type: string
          minLength: 1
          maxLength: 50
          example: My Event
        event_description:
          type: string
          example: This is an sample event
        duration:
          type: integer
          minimum: 1
          example: 1
        start_time:
          type: array
          items:
            type: string
            format: date-time
            example: 2023-12-31T12:34:56Z
        end_time:
          type: array
          items:
            type: string
            format: date-time
            example: 2023-12-31T13:34:56Z

    CreateEventResponse:
      type: object
      required:
        - organizer_id
        - event_name
        - event_description
        - duration
        - start_time
        - end_time
      properties:
        event_id:
          type: integer
          minimum: 1
          example: 1
        organizer_id:
          type: integer
          minimum: 1
          example: 1
        event_name:
          type: string
          minLength: 1
          maxLength: 50
          example: My Event
        event_description:
          type: string
          example: This is an sample event
        created_at:
          type: string
          format: date-time
          example: 2023-12-31T12:34:56Z

    UpdateEventResponse:
      type: object
      required:
        - event_name
        - event_description
        - duration
      properties:
        event_name:
          type: string
          minLength: 1
          maxLength: 50
          example: My Updated Event
        event_description:
          type: string
          example: This is an updated sample event
        duration:
          type: integer
          minimum: 1
          example: 2

    TimeSlotsUser:
      type: object
      required:
        - id
        - user_id
        - start_time
        - end_time
      properties:
        id:
          type: integer
          minimum: 1
          example: 1
        user_id:
          type: integer
          minimum: 1
          example: 1
        start_time:
          type: string
          format: date-time
          example: 2023-12-31T12:34:56Z
        end_time:
          type: string
          format: date-time
          example: 2023-12-31T13:34:56Z
  
    CreateTimeSlotUserRequest:
      type: object
      required:
        - user_id
        - start_time
        - end_time
      properties:
        user_id:
          type: integer
          minimum: 1
          example: 1
        start_time:
          type: array
          items:
            type: string
            format: date-time
            example: 2023-12-31T12:34:56Z
        end_time:
          type: array
          items:
            type: string
            format: date-time
            example: 2023-12-31T13:34:56Z
      
    TimeSlotUserResponse:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
          example: 1
        user_id:
          type: integer
          minimum: 1
          example: 1
        start_time:
          type: string
          format: date-time
          example: 2023-12-31T12:34:56Z
        end_time:
          type: string
          format: date-time
          example: 2023-12-31T13:34:56Z

    UpdateTimeSlotsEventRequest:
      type: object
      required:
        - id
        - event_id
        - start_time
        - end_time
      properties:
        id:
          type: integer
          minimum: 1
          example: 1
        event_id:
          type: integer
          minimum: 1
          example: 1
        start_time:
          type: string
          format: date-time
          example: 2023-12-31T12:34:56Z
        end_time:
          type: string
          format: date-time
          example: 2023-12-31T13:34:56Z

    TimeSlotsEventResponse:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
          example: 1
        event_id:
          type: integer
          minimum: 1
          example: 1
        start_time:
          type: string
          format: date-time
          example: 2023-12-31T12:34:56Z
        end_time:
          type: string
          format: date-time
          example: 2023-12-31T13:34:56Z